{"version":3,"sources":["components/CharacterItem.js","components/CharacterGrid.js","App.js","token.js","index.js"],"names":["CharacterItem","character","Card","elevation","style","margin","maxWidth","borderRadius","CardContent","name","src","image","url","alt","textAlign","biography","publisher","length","slice","work","occupation","appearance","gender","race","height","weight","powerstats","speed","intelligence","strength","durability","power","combat","CharacterGrid","characters","display","flexDirection","flexWrap","justifyContent","map","id","App","useState","setCharacters","query","setQuery","useEffect","a","axios","result","data","results","console","log","fetchData","classes","makeStyles","theme","popover","pointerEvents","paper","padding","spacing","useStyles","anchorEl","setAnchorEl","handlePopoverClose","open","Boolean","className","type","value","onChange","e","setTimeout","target","position","top","marginTop","outline","fontSize","border","right","undefined","onMouseEnter","currentTarget","onMouseLeave","Popover","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","Typography","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db575ab5.chunk.js","sourcesContent":["/* eslint-disable no-restricted-globals */\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst CharacterItem = ({ character }) => {\n  return (\n    <Card\n      elevation={3}\n      style={{ margin: 10, maxWidth: \"20rem\", borderRadius: 10 }}\n    >\n      <CardContent>\n        <h2>{character.name}</h2>\n        <img\n          src={character.image.url}\n          alt={character.name}\n          style={{ maxWidth: \"100%\", borderRadius: 10 }}\n        />\n\n        <div style={{ textAlign: \"left\" }}>\n          <h4>Biography: </h4>\n          <div>Publisher: {character.biography.publisher}</div>\n          {/* Can't use the dot notation syntax for \"full-name\" because 'name' is deprecated */}\n          <div>\n            Full-name:{\" \"}\n            {character.biography[\"full-name\"]\n              ? character.biography[\"full-name\"]\n              : \"n/a\"}\n          </div>\n\n          <div>Place of Birth: {character.biography[\"place-of-birth\"]}</div>\n          <div>\n            First Appearance:{\" \"}\n            {character.biography[\"first-appearance\"].length > 30\n              ? character.biography[\"first-appearance\"].slice(0, 30) + \"...\"\n              : character.biography[\"first-appearance\"]}\n          </div>\n          <div>Occupation: {character.work.occupation}</div>\n\n          <h4>Appearance: </h4>\n          <div>Gender: {character.appearance.gender}</div>\n          <div>Race: {character.appearance.race}</div>\n          <div>Height: {character.appearance.height[0]}</div>\n          <div>Weight: {character.appearance.weight[0]}</div>\n          <div>Eye Color: {character.appearance[\"eye-color\"]}</div>\n          <div>Hair Color: {character.appearance[\"hair-color\"]}</div>\n\n          <h4>Stats: </h4>\n          <div>Speed: {character.powerstats.speed}</div>\n          <div>Intelligence: {character.powerstats.intelligence}</div>\n          <div>Strength: {character.powerstats.strength}</div>\n          <div>Durability: {character.powerstats.durability}</div>\n          <div>Power: {character.powerstats.power}</div>\n          <div>Combat: {character.powerstats.combat}</div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CharacterItem;\n","import React from \"react\";\nimport CharacterItem from \"./CharacterItem\";\n\nconst CharacterGrid = ({ characters }) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n      }}\n    >\n      {characters.map((character) =>\n        // Line 16 is a hacky way to avoid displaying characters whose image URL is broken\n        character.powerstats.speed !== \"null\" ? (\n          <CharacterItem\n            key={character.id}\n            character={character}\n          ></CharacterItem>\n        ) : (\n          \"\"\n        )\n      )}\n    </div>\n  );\n};\n\nexport default CharacterGrid;\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CharacterGrid from \"./components/CharacterGrid\";\nimport token from \"./token\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction App() {\n  const [characters, setCharacters] = useState(\"\");\n  const [query, setQuery] = useState(\"batman\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        `https://superheroapi.com/api/${token}/search/${query}`\n      );\n\n      setCharacters(result.data.results);\n      console.log(result.data.results);\n    };\n\n    fetchData();\n  }, [query]);\n\n  const useStyles = makeStyles((theme) => ({\n    popover: {\n      pointerEvents: \"none\",\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n  }));\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handlePopoverOpen = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div className=\"App\">\n      <input\n        type=\"text\"\n        value={query}\n        onChange={(e) => setTimeout(setQuery(e.target.value), 3000)}\n        style={{\n          position: \"sticky\",\n          top: 10,\n          marginTop: 10,\n          outline: \"none\",\n          height: \"30px\",\n          fontSize: \"25px\",\n          border: \"1px solid darkgray\",\n          borderRadius: 6,\n        }}\n      />\n\n      {/* Displays helpful information when mousover the 'info' icon */}\n      <div style={{ position: \"absolute\", right: 20, top: 20 }}>\n        <InfoOutlinedIcon\n          aria-owns={open ? \"mouse-over-popover\" : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={handlePopoverOpen}\n          onMouseLeave={handlePopoverClose}\n        />\n      </div>\n\n      <div>\n        <Popover\n          id=\"mouse-over-popover\"\n          className={classes.popover}\n          classes={{\n            paper: classes.paper,\n          }}\n          open={open}\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"right\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={handlePopoverClose}\n          disableRestoreFocus\n        >\n          <Typography>\n            You must search for a character. <br /> The superhero API doesn't\n            have an endpoint <br /> to display all characters by default.\n          </Typography>\n        </Popover>\n      </div>\n\n      {characters ? (\n        <CharacterGrid characters={characters} />\n      ) : (\n        <h2>Unable to find matching characters. Please refine your search.</h2>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const token = \"10225131195777441\";\n\nexport default token;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}